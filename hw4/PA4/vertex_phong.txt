//Phong Reflection Model Vertex Shader
#version 330
uniform mat4 viewMatrix, projMatrix;
uniform mat3 normalMatrix;

layout (location = 0) in vec4 position;
in vec3 normal;
in vec3 color;

layout(location = 1) in vec2 vertexUV;
 
out vec3 Color;
out vec3 Normal;
out vec4 Position;
 
//send them to fragment shader
out vec3 world_position;
 
void main()
{
 //convert in world coords
	world_position = vec3(position);//Casting a higher-dimensional vector to a lower-dimensional vector
	Normal = normalize(normalMatrix * normal);
	gl_Position = projMatrix *  viewMatrix * position;  
}
